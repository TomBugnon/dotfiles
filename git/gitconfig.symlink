[alias]
  co = checkout
  b = branch
  ba = branch -a
  c = commit -m
  com = commit -m
  ca = commit -am
  d = diff
  wd = diff --word-diff
  dc = diff --cached
  g = log --graph
  gr = log --graph --pretty=oneline --abbrev-commit
  la = log --graph --date-order --all --full-history --date=short --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[0m"
  l = log --graph --date-order --all --full-history --date=relative --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[32m%x20%ad%x1b[0m"
  s = status
  mt = mergetool
  unstage = reset HEAD --
  undo = reset --soft HEAD^
  nuke = reset --hard HEAD^
  blast = reset --hard HEAD
  amend = commit --amend -C HEAD
  contrib = shortlog -sn
  untrack = update-index --assume-unchanged
  track = update-index --no-assume-unchanged
  cp = cherry-pick
  # Alternative to stash:
  #   1. Create a branch named “foobar”
  #   2. Commit any changes on that branch
  #   3. Swap you back to the branch you started on
  save = !sh -c 'export PREV=$(git symbolic-ref HEAD|cut -d/ -f3-) && git checkout -b "$1" && git commit -am "$1" && git checkout "$PREV"' -
  reb = rebase -i
  # Hide files
  hide = update-index --assume-unchanged
  unhide = update-index --no-assume-unchanged
  unhideall = update-index --really-refresh
  hidden = !git ls-files -v | grep "^[[:lower:]]"
  # List all tracked files
  tracked = ls-files -v
[color]
  ui = 1
[color "branch"]
  current = cyan
  local = green
  remote = yellow
[color "diff"]
  meta = cyan reverse
  frag = reverse
  old = red
  new = green
[color "status"]
  added = green
  changed = yellow
  untracked = cyan
[user]
  name = Tom Bugnon
  email = tombugnon@hotmail.com
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
  editor = vim
[credential]
  # helper = osxkeychain
[push]
  default = current
[help]
  autocorrect = 0
[rerere]
  enabled = 1
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[diff]
  tool = atom
[diff "xlsx"]
  binary = true
  textconv = /usr/local/bin/xlsx2csv
[difftool]
  prompt = false
[difftool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args \"$LOCAL\" \"$PWD/$REMOTE\"
[merge]
  tool = atom
[mergetool]
  prompt = false
[mergetool "meld"]
  trustExitCode = true
  cmd = open -W -a Meld --args --auto-merge \"$PWD/$LOCAL\" \"$PWD/$BASE\" \"$PWD/$REMOTE\" --output=\"$PWD/$MERGED\"
[pull]
	rebase = false
